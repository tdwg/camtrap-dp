{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Camera Trap Data Package",
  "description": "Data exchange format for camera trap data. https://tdwg.github.io/camtrap-dp/",
  "type": "object",
  "allOf": [
    {
      "$ref": "https://frictionlessdata.io/schemas/data-package.json"
    },
    {
      "required": [
        "profile",
        "created",
        "contributors",
        "project",
        "spatial",
        "temporal",
        "taxonomic"
      ],
      "properties": {
        "profile": {
          "description": "URL of the used Camtrap DP Profile version (e.g. `https://raw.githubusercontent.com/tdwg/camtrap-dp/1.0/camtrap-dp-profile.json`).",
          "format": "uri"
        },
        "licenses": {
          "description": "[Licenses](https://specs.frictionlessdata.io/data-package/#licenses) under which the Data Package is published. If provided, requires at least a license for the content of the Data Package and one for the media files referenced in `media.csv` (see `scope`).",
          "minItems": 2,
          "items": {
            "required": [
              "scope"
            ],
            "properties": {
              "scope": {
                "description": "Scope of the license. `data` for the license under which the content of the Data Package is provided, `media` for the license under which the media files referenced in `media.csv` are provided.",
                "enum": [
                  "data",
                  "media"
                ] 
              }
            }
          }
        },
        "resources": {
          "description": "An `array` of Tabular Data Resource objects, each compliant with the [Tabular Data Resource](https://specs.frictionlessdata.io/tabular-data-resource/) specification.",
          "minItems": 3,
          "maxItems": 3,
          "items": {
            "properties": {
              "name": {
                "description": "Identifier for the resource. Allowed names are `deployments`, `media` and `observations` (see [Data](../data/)).",
                "enum": [
                  "deployments",
                  "media",
                  "observations"
                ]
              },
              "schema": {
                "description": "URL of the used Camtrap DP Table Schema version (e.g. `https://raw.githubusercontent.com/tdwg/camtrap-dp/1.0/deployments-table-schema.json`).",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "enum": [
                      "deployments",
                      "media",
                      "observations"
                    ]
                  }
                }
              }
            }
          }
        },
        "organizations": {
          "description": "List of organizations related to this data package.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "title",
              "path"
            ],
            "properties": {
              "title": {
                "description": "Organization name.",
                "type": "string"
              },
              "path": {
                "description": "Organization website.",
                "type": "string",
                "format": "uri"
              },
              "email": {
                "description": "Organization contact email.",
                "type": "string",
                "format": "email"
              }
            }
          }
        },
        "rightsHolder": {
          "description": "Person or organization owning or managing rights over this data package.",
          "type": "string",
          "skos:exactMatch": "http://purl.org/dc/terms/rightsHolder"
        },
        "bibliographicCitation": {
          "description": "Bibliographic/recommended citation for this data package.",
          "type": "string",
          "skos:exactMatch": "http://purl.org/dc/terms/bibliographicCitation"
        },
        "project": {
          "description": "Camera trap project that generated the data in this data package.",
          "type": "object",
          "required": [
            "title",
            "samplingDesign",
            "captureMethod",
            "animalTypes",
            "classificationLevel",
            "sequenceInterval"
          ],
          "properties": {
            "id": {
              "description": "Unique identifier of the project.",
              "type": "string"
            },
            "title": {
              "description": "Title of the project.",
              "type": "string"
            },
            "acronym": {
              "description": "Project acronym.",
              "type": "string"
            },
            "description": {
              "description": "Description of the project, ideally expressed in Markdown format. To describe the data package itself, use <https://specs.frictionlessdata.io/data-package/#description>.",
              "type": "string"
            },
            "path": {
              "description": "Project website.",
              "type": "string",
              "format": "uri"
            },
            "samplingDesign": {
              "description": "Type of a sampling design/layout. The values are based on Wearn & Glover-Kapfer (2017, <https://doi.org/10.13140/RG.2.2.23409.17767>), pages 80-82: `simple random`: random distribution of sampling locations; `systematic random`: random distribution of sampling locations, but arranged in a regular pattern; `clustered random`: random distribution of sampling locations, but clustered in arrays; `experimental`: non-random distribution aimed to study an effect, including the before-after control-impact (BACI) design; `targeted`: non-random distribution optimized for capturing specific target species (often using various bait types); `opportunistic`: opportunistic camera trapping (usually with a small number of cameras).",
              "type": "string",
              "enum": [
                "simple random",
                "systematic random",
                "clustered random",
                "experimental",
                "targeted",
                "opportunistic"
              ]
            },
            "captureMethod": {
              "description": "Method(s) used to capture media files.",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "motion detection",
                  "time lapse"
                ]
              },
              "uniqueItems": true,
              "minItems": 1
            },
            "animalTypes": {
              "description": "Type of observed animals. `marked` indicates specific animal individuals can be recognized.",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "unmarked",
                  "marked"
                ]
              },
              "uniqueItems": true,
              "minItems": 1
            },
            "classificationLevel": {
              "type": "string",
              "description": "Information about a focal level of the classification process. `sequence`: classifications (i.e. rows in `observations.csv` table) are provided at a sequence level (multiple media files can be part of one sequence); `media`: classifications are available for each single media file.",
              "enum": [
                "sequence",
                "media"
              ]
            },
            "sequenceInterval": {
              "description": "Maximum number of seconds between timestamps of successive media files to be considered part of a single sequence and be assigned the same `sequenceID`.",
              "type": "integer"
            },
            "references": {
              "description": "List of references related to the project (e.g. references cited in the project description). References ideally include a DOI.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "spatial": {
          "description": "Spatial coverage for this data package expressed as GeoJSON.",
          "$ref": "http://json.schemastore.org/geojson.json",
          "skos:exactMatch": "http://purl.org/dc/terms/spatial"
        },
        "temporal": {
          "description": "Temporal coverage for this data package, based on the included deployments.",
          "type": "object",
          "skos:exactMatch": "http://purl.org/dc/terms/temporal",
          "required": [
            "start",
            "end"
          ],
          "properties": {
            "start": {
              "description": "Start date of the first deployment, as an ISO 8601 formatted string (`YYYY-MM-DD`).",
              "type": "string",
              "format": "date"
            },
            "end": {
              "description": "End date of the last (completed) deployment, as an ISO 8601 formatted string (`YYYY-MM-DD`).",
              "type": "string",
              "format": "date"
            }
          }
        },
        "taxonomic": {
          "description": "List of taxa as the taxonomic coverage for this data package. Based on the unique `scientificName` values in `observations.csv` table.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "taxonID",
              "taxonIDReference",
              "scientificName"
            ],
            "properties": {
              "taxonID": {
                "description": "Unique identifier of the taxon according to the taxonomic reference list defined by `taxonIDReference`.",
                "example": "QLXL",
                "type": "string",
                "skos:exactMatch": "http://rs.tdwg.org/dwc/terms/taxonID"
              },
              "taxonIDReference": {
                "description": "URL of the source (reference list) of the `taxonID`.",
                "example": "https://www.catalogueoflife.org",
                "type": "string",
                "format": "uri"
              },
              "scientificName": {
                "description": "Scientific name of the taxon.",
                "example": "Canis lupus",
                "type": "string",
                "skos:exactMatch": "http://rs.tdwg.org/dwc/terms/scientificName"
              },
              "taxonRank": {
                "description": "Taxonomic rank of the scientific name.",
                "example": "species",
                "type": "string",
                "skos:exactMatch": "http://rs.tdwg.org/dwc/terms/taxonRank",
                "enum": [
                  "kingdom",
                  "phylum",
                  "class",
                  "order",
                  "family",
                  "genus",
                  "species",
                  "subspecies"
                ]
              },
              "vernacularNames": {
                "description": "Common or vernacular names of the taxon, as `languageCode: name` pairs. Language code should follow ISO 639-1 (e.g. `en` for English).",
                "example": "{'en': 'wolf', 'fr': 'loup gris'}",
                "type": "object",
                "patternProperties": {
                  "^[a-z]{2}$": {
                    "description": "Common or vernacular name of the taxon in that language.",
                    "type": "string",
                    "skos:exactMatch": "http://rs.tdwg.org/dwc/terms/vernacularName"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "platform": {
          "description": "Data management or repository system used to generate this data package.",
          "type": "object",
          "properties": {
            "title": {
              "description": "Platform name.",
              "type": "string"
            },
            "path": {
              "description": "Platform website.",
              "type": "string",
              "format": "uri"
            },
            "version": {
              "description": "Platform version.",
              "type": "string"
            },
            "packageID": {
              "description": "Data package ID assigned by the platform.",
              "type": "string"
            }
          }
        }
      }
    }
  ]
}
